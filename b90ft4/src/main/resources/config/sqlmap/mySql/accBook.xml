<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="b90ft4.web.repository.mapper.AccBookMapper">
	
	<resultMap id="expenseCategoryMap" type="expenseCategoryVO">
		<result column="expense_Category_no" property="expenseCategoryNo" />
		<result column="expense_Category_name" property="expenseCategoryName" />
		<result column="User_id" property="userId" />
	</resultMap>
	
	<resultMap id="incomeCategoryMap" type="incomeCategoryVO">
		<result column="income_Category_no" property="incomeCategoryNo" />
		<result column="income_Category_name" property="incomeCategoryName" />
		<result column="User_id" property="userId" />
	</resultMap>

	<select id="selectExpenseCtgy" parameterType="string" resultMap="expenseCategoryMap">
		select * 
		  from tb_sam_expense_category
		where user_id = 'admin'
		   or user_id = #{userId}
		order by expense_category_no
	</select>

	<select id="selectIncomeCtgy" parameterType="string" resultMap="incomeCategoryMap">
		select * 
		  from tb_sam_income_category
		where user_id = 'admin'
		   or user_id = #{userId}
		order by income_category_no
	</select>
	
	<select id="count" resultMap="incomeCategoryMap" >
	 	select *
	 	  from tb_sam_income_category
	</select>
	
	<insert id="insertExpense" parameterType="expenseVO">
		insert into tb_sam_expense (
			user_id,
			expense_category_no,
			expense_content,
			expense_amount,
			expense_date
		) values( 
			#{userId},
			#{expenseCategoryNo},
			#{expenseContent},
			#{expenseAmount},
			#{expenseDate}
		)
	</insert>
	
	<insert id="insertIncome" parameterType="incomeVO">
		insert into tb_sam_income (
			user_id,
			income_category_no,
			income_content,
			income_amount,
			income_date
		) values( 
			#{userId},
			#{incomeCategoryNo},
			#{incomeContent},
			#{incomeAmount},
			#{incomeDate}
		)
	</insert>
	
	<resultMap type="expenseVO" id="expenseMap">
		<result property="expenseNo" column="expense_no"  />
		<result property="userId" column="user_id"  />
		<result property="expenseCategoryNo" column="expense_category_no"  />
		<result property="expenseCategoryName" column="expense_category_name"  />
		<result property="expenseContent" column="expense_content"  />
		<result property="expenseAmount" column="expense_amount"  />
		<result property="expenseDate" column="expense_date"  />
	</resultMap>
	
	<resultMap type="incomeVO" id="incomeMap">
		<result property="incomeNo" column="income_no"  />
		<result property="userId" column="user_id"  />
		<result property="incomeCategoryNo" column="income_category_no"  />
		<result property="incomeCategoryName" column="income_category_name"  />
		<result property="incomeContent" column="income_content"  />
		<result property="incomeAmount" column="income_amount"  />
		<result property="incomeDate" column="income_date"  />
	</resultMap>
	
	<sql id="expenseCommon">
		  from tb_sam_expense ex, tb_sam_expense_category exc
			<where> 
			   ex.expense_category_no = exc.expense_category_no
			   and  ex.user_id= #{userId}
			  <if test= "startDate != null and endDate == null " >
			   and  ex.expense_date = #{startDate}
			  </if>
			  
			  <if test= "startDate != null and endDate != null " >
			   and  ex.expense_date between STR_TO_DATE (#{startDate}, '%Y-%m-%d') 
						  			    and STR_TO_DATE (#{endDate}, '%Y-%m-%d')
			  </if>
			  <if test= "expenseCategoryNo != 0 " >
			  		ex.expense_category_no = #{expenseCategoryNo}
			  </if>
			</where>
	</sql>
	
	
	<sql id="incomeCommon">
		  from tb_sam_income income, tb_sam_income_category inc
			<where> 
			   income.income_category_no = inc.income_category_no
			   and  income.user_id= #{userId}
			  <if test= "startDate != null and endDate == null " >
			   and  income.income_date = #{startDate}
			  </if>
			  
			  <if test= "startDate != null and endDate != null " >
			   and  income.income_date between STR_TO_DATE (#{startDate}, '%Y-%m-%d') 
						  			    and STR_TO_DATE (#{endDate}, '%Y-%m-%d')
			  </if>
			  <if test= "incomeCategoryNo != 0 " >
			  		income.income_category_no = #{incomeCategoryNo}
			  </if>
			</where>
	</sql>
	
	<select id="selectExpense" parameterType="searchVO" resultMap="expenseMap">
		select 	ex.expense_no,
				ex.user_id,  				
				exc.expense_category_name, 	
				exc.expense_category_no, 	
				ex.expense_content, 	    
				ex.expense_amount,
				ex.expense_date 			
			<include refid="expenseCommon"/>
			order by ex.expense_date
	</select>
	
	<select id="selectIncome" parameterType="searchVO" resultMap="incomeMap">
		select 	income.income_no,
				income.user_id,  				
				inc.income_category_name, 	
				inc.income_category_no, 	
				income.income_content, 	    
				income.income_amount,
				income.income_date 			
			 <include refid="incomeCommon"/>
			  order by income.income_date
	</select>
	
	<select id="selectExpenpseEachDayCount" parameterType="searchVO" resultType="string">
			select 	count(ex.expense_date)			
			<include refid="expenseCommon"/>
			group by ex.expense_date
			order by ex.expense_date
	</select>
	
	<select id="selectIncomeEachDayCount" parameterType="searchVO" resultType="string">
			select 	count(income.income_date)			
			<include refid="incomeCommon"/>
			group by income.income_date
			order by income.income_date
	</select>
	
	
	
	<delete id="deleteExpense" parameterType="searchVO">
		delete 
		  from tb_sam_expense
		where expense_no = #{delNo}
	</delete>
	<delete id="deleteIncome" parameterType="searchVO">
		delete 
		  from tb_sam_income
		where income_no = #{delNo}
	</delete>
	
	<update id="updateExpense" parameterType="expenseVO">
	
		update tb_sam_expense
		  set expense_category_no = #{expenseCategoryNo},
		      expense_amount = #{expenseAmount},
		      expense_content = #{expenseContent}
		where expense_no = #{expenseNo}
	
	</update>
	
	<update id="updateIncome" parameterType="incomeVO">
		update tb_sam_income
		  set income_category_no = #{incomeCategoryNo},
		      income_amount = #{incomeAmount},
		      income_content = #{incomeContent}
		where income_no = #{incomeNo}
	</update>
	
</mapper>









